(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     54497,       1064]
NotebookOptionsPosition[     53630,       1041]
NotebookOutlinePosition[     53992,       1057]
CellTagsIndexPosition[     53949,       1054]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Zeta", "[", "s", "]"}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"s", " ", "\[Pi]"}], "2"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", 
     RowBox[{"-", "9"}], ",", "0.5"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Default\>\""}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/Flo/Dropbox/Schule/3. W-Seminar/jupyter/zeta/zeta-sin.pdf\>\"", 
   ",", "%", ",", "\"\<PDF\>\""}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.727266247381168*^9, 3.727266414601672*^9}, {
  3.727266458167807*^9, 3.7272665275894833`*^9}, {3.727266558823483*^9, 
  3.727266619957773*^9}},ExpressionUUID->"33f6460f-6355-42c9-a24c-\
b8897d38275a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8526#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{-8.064432983376646, -0.1}, {-8.036809542997469, \
-0.057788082978124676`}, {-7.935591638950904, 0.1}}], 
         LineBox[{{-4.064526234088137, -0.1}, {-3.959194978869636, 
          0.06405249797613286}, {-3.9357061757059215`, 0.1}}], 
         LineBox[{{-2.064639549246197, 0.1}, {-2.021766468394841, 
          0.0341840274872778}, {-1.935466356302232, -0.1}}], 
         LineBox[{{-6.063904798522754, 0.1}, {-5.936061415792972, -0.1}}], 
         LineBox[{{-0.06389193171880503, -0.1}, {0.06396169136362281, 0.1}}]},
         Annotation[#, "Charting`Private`Tag$8526#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["x", TraditionalForm], 
       FormBox["y", TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8.99999980612245, 0.499999806122449}, {-0.1, 0.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"s"}, "Zeta"], 
       RowBox[{"sin", "(", 
         FractionBox[
          RowBox[{"s", " ", "\[Pi]"}], "2"], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.727266280997571*^9, 3.7272664152232637`*^9}, {
  3.727266475012849*^9, 3.727266528151129*^9}, {3.72726658751285*^9, 
  3.72726662203511*^9}},ExpressionUUID->"0c5d7fb6-45ea-4c55-98c8-\
94a3e33d0b6c"],

Cell[BoxData["\<\"/Users/Flo/Dropbox/Schule/3. \
W-Seminar/jupyter/zeta/zeta-sin.pdf\"\>"], "Output",
 CellChangeTimes->{{3.727266280997571*^9, 3.7272664152232637`*^9}, {
   3.727266475012849*^9, 3.727266528151129*^9}, {3.72726658751285*^9, 
   3.727266592892414*^9}, 
   3.7272666229208813`*^9},ExpressionUUID->"3ea42b1e-8333-4327-8ab6-\
510d27074e83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Zeta", "[", "s", "]"}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"s", " ", "\[Pi]"}], "2"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", 
     RowBox[{"-", "9"}], ",", "0.5"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Default\>\""}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/Flo/Dropbox/Schule/3. W-Seminar/jupyter/zeta/zeta-sin-small.pdf\
\>\"", ",", "%", ",", "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.752238778311602*^9, 
  3.75223878248318*^9}},ExpressionUUID->"3ccad8d9-2360-41aa-80dd-\
83970f547734"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2151#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{-8.064432983376646, -0.1}, {-8.036809542997469, \
-0.057788082978124676`}, {-7.935591638950904, 0.1}}], 
         LineBox[{{-4.064526234088137, -0.1}, {-3.959194978869636, 
          0.06405249797613286}, {-3.9357061757059215`, 0.1}}], 
         LineBox[{{-2.064639549246197, 0.1}, {-2.021766468394841, 
          0.0341840274872778}, {-1.935466356302232, -0.1}}], 
         LineBox[{{-6.063904798522754, 0.1}, {-5.936061415792972, -0.1}}], 
         LineBox[{{-0.06389193171880503, -0.1}, {0.06396169136362281, 0.1}}]},
         Annotation[#, "Charting`Private`Tag$2151#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["x", TraditionalForm], 
       FormBox["y", TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Small, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8.99999980612245, 0.499999806122449}, {-0.1, 0.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"s"}, "Zeta"], 
       RowBox[{"sin", "(", 
         FractionBox[
          RowBox[{"s", " ", "\[Pi]"}], "2"], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.75223878440042*^9},ExpressionUUID->"869763af-3e16-4270-9758-ca07a67780fe"],

Cell[BoxData["\<\"/Users/Flo/Dropbox/Schule/3. \
W-Seminar/jupyter/zeta/zeta-sin-small.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.752238785376689*^9},ExpressionUUID->"c58790be-43cf-4f52-a87a-\
e1a32703cf00"]
}, Open  ]]
},
WindowSize->{808, 851},
WindowMargins->{{Automatic, -952}, {-36, Automatic}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1194, 30, 116, "Input",ExpressionUUID->"33f6460f-6355-42c9-a24c-b8897d38275a"],
Cell[1777, 54, 25138, 468, 259, "Output",ExpressionUUID->"0c5d7fb6-45ea-4c55-98c8-94a3e33d0b6c"],
Cell[26918, 524, 353, 6, 34, "Output",ExpressionUUID->"3ea42b1e-8333-4327-8ab6-510d27074e83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27308, 535, 1076, 29, 116, "Input",ExpressionUUID->"3ccad8d9-2360-41aa-80dd-83970f547734"],
Cell[28387, 566, 25015, 466, 148, "Output",ExpressionUUID->"869763af-3e16-4270-9758-ca07a67780fe"],
Cell[53405, 1034, 209, 4, 92, "Output",ExpressionUUID->"c58790be-43cf-4f52-a87a-e1a32703cf00"]
}, Open  ]]
}
]
*)

